//
//  SettingsView.swift
//  iGram
//
//  Created by Alexandr Kozin on 29.11.2022.
//

import SwiftUI

struct SettingsView: View {
    
    @Environment(\.colorScheme) var colorScheme
    @Environment(\.presentationMode) var presentationMode
    
    @State var showSignOutError: Bool = false
    
    @Binding var userDisplayName: String
    @Binding var userBio: String
    @Binding var userProfilePicture: UIImage
    //@Binding var userFeedback:String
    
    var body: some View {
        NavigationView {
            ScrollView(.vertical, showsIndicators: false, content: {
                
                // MARK: SECTION 1: IGRAM
                GroupBox(label: SettingsLabelView(labelText: "iGram", labelImage: "dot.radiowaves.left.and.right"), content: {
                    HStack(alignment: .center, spacing: 10, content: {
                        
                        Image("logo")
                            .resizable()
                            .scaledToFit()
                            .frame(width: 80, height: 80, alignment: .center)
                            .cornerRadius(12)
                        
                        Text("iGram - —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤–∞—à–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –æ–±–º–µ–Ω–∞ –∏–º–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É.  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ –¥–ª—è –∫—É—Ä—Å–æ–≤–æ–π —Ä–∞–±–æ—Ç—ã –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ.")
                            .font(.footnote)
                    })
                })
                .padding()
                
                // MARK: SECTION 2: PROFILE
                GroupBox(label: SettingsLabelView(labelText: "–ü—Ä–æ—Ñ–∏–ª—å", labelImage: "person.fill"), content: {
                    
                    NavigationLink(
                        destination:
                            SettingsEditTextView(submissionText: userDisplayName, title: "–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è", description: "–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –∑–¥–µ—Å—å. –≠—Ç–æ —É–≤–∏–¥—è—Ç –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –∏ –≤ –≤–∞—à–∏—Ö –ø–æ—Å—Ç–∞—Ö!", placeholder: "–í–∞—à–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è –∑–¥–µ—Å—å...", settingsEditTextOption: .displayName, profileText: $userDisplayName),
                        label: {
                            SettingsRowView(leftIcon: "pencil", text: "–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è", color: colorScheme == .light ? Color.MyTheme.purpleColor : Color.MyTheme.yellowColor)
                    })
                    
                    NavigationLink(
                        destination:
                            SettingsEditTextView(submissionText: userBio, title: "–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ—Ñ–∏–ª—è", description: "–í–∞—à–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏—è ‚Äî –æ—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥–ª–∏ –Ω–µ–º–Ω–æ–≥–æ —É–∑–Ω–∞—Ç—å –æ –≤–∞—Å. –û–Ω –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ.", placeholder: "–í–∞—à–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏—è –∑–¥–µ—Å—å...", settingsEditTextOption: .bio, profileText: $userBio),
                        label: {
                            SettingsRowView(leftIcon: "text.quote", text: "–ë–∏–æ–≥—Ä–∞—Ñ–∏—è", color: colorScheme == .light ? Color.MyTheme.purpleColor : Color.MyTheme.yellowColor)
                    })
                    
                    NavigationLink(
                        destination: SettingsEditImageView(title: "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ—Ñ–∏–ª—è", description: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –≤–∞—à–µ–º –ø—Ä–æ—Ñ–∏–ª–µ –∏ –≤ –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–µ–ª–∞—é—Ç —ç—Ç–æ —Å–≤–æ–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º!", selectedImage: userProfilePicture, profileImage: $userProfilePicture),
                        label: {
                            SettingsRowView(leftIcon: "photo", text: "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ—Ñ–∏–ª—è", color: colorScheme == .light ? Color.MyTheme.purpleColor : Color.MyTheme.yellowColor)
                        })
                    
                    NavigationLink(
                        destination:
                            SettingsEditTextView(submissionText: "", title: "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", description: "–û—Å—Ç–∞–≤–ª—è—è –æ—Ç–∑—ã–≤, –≤—ã –ø–æ–º–æ–≥–∞–µ—Ç–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ –µ–≥–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–∏ –∏ –º–æ–∂–µ—Ç–µ –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å —Å–æ–∑–¥–∞—Ç–µ–ª—è –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–µ.", placeholder: "–í–∞—à–∞ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∑–¥–µ—Å—å...", settingsEditTextOption: .bio, profileText: $userBio),
                        label: {
                            SettingsRowView(leftIcon: "message.fill", text: "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", color: colorScheme == .light ? Color.MyTheme.purpleColor : Color.MyTheme.yellowColor)
                    })
                    
                    
                    Button(action: {
                        signOut()
                    }, label: {
                        SettingsRowView(leftIcon: "figure.walk", text: "–í—ã—Ö–æ–¥ —Å –∞–∫–∫–∞—É–Ω—Ç–∞", color: colorScheme == .light ? Color.MyTheme.purpleColor : Color.MyTheme.yellowColor)
                    })
                    .alert(isPresented: $showSignOutError, content: {
                        return Alert(title: Text("Error signing out ü•µ"))
                    })
                    
                })
                .padding()
                
                // MARK: SECTION 3: LINKS
                GroupBox(label: SettingsLabelView(labelText: "–°—Å—ã–ª–∫–∏", labelImage: "link"), content: {
                   
                    Button(action: {
                        openCustomURL(urlString: "https://github.com/KozinAlexandr/iGram")
                    }, label: {
                        SettingsRowView(leftIcon: "network", text: "–ü—Ä–æ–µ–∫—Ç –Ω–∞ GitHub", color: colorScheme == .light ? Color.MyTheme.purpleColor : Color.MyTheme.yellowColor)
                    })
                    
                    Button(action: {
                        openCustomURL(urlString: "https://t.me/argonauttz")
                    }, label: {
                        SettingsRowView(leftIcon: "signature", text: "–ö–æ–Ω—Ç–∞–∫—Ç—ã", color: colorScheme == .light ? Color.MyTheme.purpleColor : Color.MyTheme.yellowColor)
                    })
                    
                    // Telegram
                    
                })
                .padding()
                
                // MARK: SECTION 4: APPLICATION
                GroupBox(label: SettingsLabelView(labelText: "–ü—Ä–∞–≤–∞", labelImage: "apps.iphone"), content: {
                    
                    Button(action: {
                        openCustomURL(urlString: "https://www.termsfeed.com/live/b268cc53-fa3f-4c30-a7b9-68347910a06a")
                    }, label: {
                        SettingsRowView(leftIcon: "folder.fill", text: "–ü–æ–ª–∏—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", color: colorScheme == .light ? Color.MyTheme.purpleColor : Color.MyTheme.yellowColor)
                    })
                    
                    Button(action: {
                        openCustomURL(urlString: "https://www.termsfeed.com/live/fd06098a-91a1-435e-b33e-19edddab82cd")
                    }, label: {
                        SettingsRowView(leftIcon: "folder.fill", text: "–ü–æ–ª–æ–∂–µ–Ω–∏—è & –£—Å–ª–æ–≤–∏—è", color: colorScheme == .light ? Color.MyTheme.purpleColor : Color.MyTheme.yellowColor)
                    })
                })
                .padding()
                
                
                // MARK: SECTION 5: SIGN OFF
                GroupBox {
                    Text("–ü–∞–≤–ª–æ–≤–∞ –ø–æ—Å—Ç–∞–≤—å –∑–∞—á–µ—Ç üò† \n iGram —Å–¥–µ–ª–∞–Ω —Å –ª—é–±–æ–≤—å—é \n –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã \n 2022")
                        .foregroundColor(.gray)
                        .multilineTextAlignment(.center)
                        .frame(maxWidth: .infinity)
                }
                .padding()
                .padding(.bottom, 80)
                
                
            })
            .navigationBarTitle("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
            .navigationBarTitleDisplayMode(.large)
            .navigationBarItems(leading:
                                    Button(action: {
                                        presentationMode.wrappedValue.dismiss()
                                    }, label: {
                                        Image(systemName: "xmark")
                                            .font(.title)
                                    })
                                        .accentColor(.primary)
            )
        }
        .accentColor(colorScheme == .light ? Color.MyTheme.purpleColor : Color.MyTheme.yellowColor)
    }
    
    // MARK: FUNCTIONS
    
    func openCustomURL(urlString: String) {
        guard let url = URL(string: urlString) else { return }
        
        if UIApplication.shared.canOpenURL(url) {
            UIApplication.shared.open(url)
        }
    }
    
    func signOut() {
        AuthService.instance.logOutUser { (success) in
            if success {
                print("Success logged out")
                
                // Dismiss settings view
                self.presentationMode.wrappedValue.dismiss()
                
            } else {
                print("Error logging out")
                self.showSignOutError.toggle()
            }
        }
        
    }
    
}

struct SettingsView_Previews: PreviewProvider {
    
    @State static var testString: String = ""
    @State static var image: UIImage = UIImage(named: "dog1")!
    
    static var previews: some View {
        SettingsView(userDisplayName: $testString, userBio: $testString, userProfilePicture: $image)
    }
}
